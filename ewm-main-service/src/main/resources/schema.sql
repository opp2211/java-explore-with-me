DROP TABLE IF EXISTS users, categories, events, compilations, event_compilations, party_requests CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (id),
  CONSTRAINT uq_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(120) NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  category_id BIGINT REFERENCES categories NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit BIGINT NOT NULL,
  request_moderation BOOLEAN NOT NULL,
  initiator_id BIGINT REFERENCES users NOT NULL,
  created_on TIMESTAMP NOT NULL,
  published_on TIMESTAMP,
  state VARCHAR(20) NOT NULL,
  location_lat FLOAT NOT NULL,
  location_lon FLOAT NOT NULL,
  CONSTRAINT pk_event PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(50) NOT NULL,
  pinned BOOLEAN NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (id),
  CONSTRAINT uq_compilation_title UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS event_compilations (
  event_id BIGINT REFERENCES events NOT NULL,
  compilation_id BIGINT REFERENCES compilations NOT NULL,
  CONSTRAINT pk_event_compilation PRIMARY KEY (event_id, compilation_id)
);

CREATE TABLE IF NOT EXISTS party_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id BIGINT REFERENCES events NOT NULL,
  requester_id BIGINT REFERENCES users NOT NULL,
  created TIMESTAMP NOT NULL,
  status VARCHAR(20) NOT NULL,
  CONSTRAINT pk_party_request PRIMARY KEY (id),
  CONSTRAINT uq_party_request_event_requester UNIQUE (event_id, requester_id)
);





